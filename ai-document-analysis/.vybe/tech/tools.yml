# Development Tools Configuration

# Code Quality Tools
linting:
  tool: ruff
  version: ">=0.11.13"
  config_file: pyproject.toml
  commands:
    check: "ruff check ."
    fix: "ruff check --fix ."
    format: "ruff format ."
  exclude:
    - .venv
    - app/core/commands
    - app/alembic

type_checking:
  tool: pyright
  config_file: pyrightconfig.json
  commands:
    check: "pyright"
    
# Package Management
package_manager:
  tool: uv
  commands:
    install: "uv pip sync uv.lock"
    add: "uv pip install"
    update: "uv pip compile pyproject.toml -o uv.lock"
    venv_create: "uv venv"
    venv_activate: "source .venv/bin/activate"

# Development Tools
dev_tools:
  - name: ipython
    version: ">=9.3.0"
    description: "Interactive Python shell"
  - name: ipykernel
    version: ">=6.29.5"
    description: "Jupyter kernel for Python"
  - name: graphviz
    version: ">=0.20.3"
    description: "Graph visualization for workflows"
  - name: nest-asyncio
    version: ">=1.6.0"
    description: "Nested async support"

# Database Tools
database_tools:
  migration_tool: alembic
  commands:
    create_migration: "alembic revision --autogenerate -m"
    migrate: "alembic upgrade head"
    rollback: "alembic downgrade -1"
    history: "alembic history"

# Monitoring & Logging
monitoring:
  logging:
    tool: Vector
    deployment: Docker container
    config: docker/volumes/logs/vector.yml
  
# API Documentation
api_docs:
  tool: FastAPI built-in
  swagger_url: "/docs"
  redoc_url: "/redoc"
  openapi_url: "/openapi.json"

# Environment Management
environment:
  tool: python-dotenv
  version: ">=1.1.0"
  env_file: ".env"
  example_file: ".env.example"

# Workflow Visualization
visualization:
  tool: graphviz
  playground: playground/visualize_workflow.py
  output_format: 
    - png
    - svg
    - pdf